Atividade 3
Nessa terceira atividade a API será para uma plataforma de cursos online. 
Nela, usuários podem se cadastrar, fazer login, se inscrever em cursos 
e assistir aulas. Descreva quais seriam as rotas para gerenciar usuários, 
listar cursos, acessar detalhes, fazer inscrições e marcar aulas como 
concluídas. Determine quais dados seriam enviados pelo cliente e quais 
seriam devolvidos pelo servidor em cada rota. Pense também em quais 
códigos de status HTTP seriam adequados para casos como cadastro 
realizado com sucesso, tentativa de acessar um curso sem estar 
inscrito ou busca por uma aula que não existe.

Atividade 3 - Curso Online

POST /cadastro

Entrada:
{
    "nome": "Gustavo Pires",
    "email": "gustavogameplay@email.com",
    "senha": "IASGDFIAUYF72361823_8217y4h"
}

Saída: 
201 Created
{
    "usuarioId": "333",
    "message": "Cadastro realizado com sucesso!"
}

400 Bad Request
{
    "message": "Campos nome, email e senha obrigátório"
}

409 Conflict
{
    "message": "esse email já foi cadastrado!"
}

-----------------------------------------------------------------------------------------------------------------------

POST /login

Entrada:
{
    "email": "gustavo@email.com",
    "senha": "IASGDFIAUYF72361823_8217y4h"
}

Saída:
200 OK
{
    "usuarioId": "333",
    "message": "Login realizado com sucesso!"
}

401 Unauthorized
{
    "message": "Email ou senha inválidos"
}

-----------------------------------------------------------------------------------------------------------------------

GET /cursos?categoria=programacao

Saída:
200 OK
[
    {"cursoId": "1", "nome": "JavaScript", "descricao": "Aprenda JS do zero", "categoria": "Programação"},
    {"cursoId": "2", "nome": "Node.js", "descricao": "Aprenda Node.js agora!", "categoria": "Programação"},
    {"cursoId": "3", "nome": "Html e CSS", "descricao": "Aprenda Html e css", "categoria": "Programação"}
]

400 Not Found:
{
    "message": "Categoria inexistente"
}

401 Unauthorized:
{
    "message": "Faça login para acessar os cursos"
}

-----------------------------------------------------------------------------------------------------------------------

GET /cursos/{cursoId}

Saída?
200 OK
{
    "cursoId": "2",
    "nome": "Node.js",
    "descricao": "Aprenda Node.js agora!",
    "aulas": [
        {"aulaId": "222", "titulo": "Introdução", "duracao": "10min"},
        {"aulaId": "333", "titulo": "Protocolos", "duracao": "15min"}
    ]
}

404 Not Found
{
    "message": "Curso não encontrado"
}

401 Unauthorized
{
    "message": "Faça login para acessar o curso"
}

-----------------------------------------------------------------------------------------------------------------------

POST /cursos/{cursoId}/inscricao

Entrada:
{
    "usuarioId": "333"
}

Saída:
201 Created:
{
    "cursoId": "2",
    "message": "Inscrição realizada com sucesso!"
}

404 Not Found
{
    "message": "Curso não encontrado"
}

401 Unauthorized
{
    "message": "Faça login para se inscrever no curso"
}

409 Conflict
{
    "message": "Você já está inscrito neste curso"
}

-----------------------------------------------------------------------------------------------------------------------

PUT /aulas/concluido

Entrada:
{
    "usuarioId": "333",
    "cursoId": "2",
    "aulaId": "222"
}

200 OK
{
    "status": "concluida",
    "message": "Aula concluída com sucesso!"
}

404 Not Found
{
    "message": "Aula ou curso não encontrado"
}

403 Forbidden
{
    "message": "Você não está inscrito neste curso"
}

401 Unauthorized
{
    "message": "Faça login para marcar aulas como concluídas"
}

-----------------------------------------------------------------------------------------------------------------------

DELETE /cursos/{cursoId}/inscricao

Entrada: 




